- name: Upgrade all packages
  tags: install
  ansible.builtin.shell: pkg upgrade -y

- name: Upgrade all packages again
  tags: install
  ansible.builtin.shell: pkg upgrade -y

- name: Install packages
  tags: install
  pkg5:
    name:
    - busybox
    - openssl
    - lftp
    - rsync
    - curl
    - vim
    - git
    - mc
    - bmon
    - sshpass
    - wget
    - python
    - traceroute
    - dnsutils
    - iproute2
    - file
    - traceroute
    - iperf3
    - man
    - nmap
    - nginx
    - which
    state: latest
  when: not ansible_check_mode

- name: Git config email
  tags: git
  git_config:
    name: user.email
    scope: global
    value: "{{ GIT_EMAIL }}"

- name: Git config name
  tags: git
  git_config:
    name: user.name
    scope: global
    value: "{{ GIT_NAME }}"

- name: Git config safe.directory
  tags:
  - git
  - safe
  community.general.git_config:
    name: safe.directory
    scope: global
    value: "{{ item.path }}"
    add_mode: add
  loop:
    - { path: /storage/emulated/0/github/prod }
    - { path: /storage/emulated/0/scripts }

- name: Create a directory if it does not exist
  tags:
  - git
  - start
  - tar
  - cron
  - crontab
  ansible.builtin.file:
    path: "{{ item.dir }}"
    force: true
    state: directory
    mode: "{{ item.perm }}"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
  loop:
    - { dir: /storage/emulated/0/scripts/github, perm: '0755' }
    - { dir: /storage/emulated/0/scripts/backup, perm: '0755' }
    - { dir: /storage/emulated/0/scripts/termux, perm: '0755' }
    - { dir: /data/data/com.termux/files/usr/var/spool/cron/crontabs, perm: '0700' }

- name: Git clone
  tags: git
  ansible.builtin.git:
    repo: https://github.com/oleg-lukianov/prod.git
    dest: /storage/emulated/0/github/prod
    update: yes
    force: true
    version: main

- name: Copy scripts 'termux/'
  tags:
  - start
  - tar
  - scripts
  - bash
  ansible.builtin.copy:
    src: termux/
    dest: /storage/emulated/0/scripts/termux/
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: '0755'

- name: Copy files from template
  tags:
  - bash
  - cron
  - crontab
  - template
  ansible.builtin.template:
    src: "termux/{{ item.j2 }}"
    dest: "/storage/emulated/0/scripts/termux/{{ item.name }}"
    mode: '0660'
  loop:
    - { j2: bash.bashrc.j2, name: bash.bashrc }
    - { j2: crontab.j2, name: crontab }
    - { j2: backup_android_lftp_rsync.conf.j2, name: backup_android_lftp_rsync.conf }

- name: Create a symbolic link
  tags:
  - start
  - welcome
  - bash
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    state: link
  loop:
    - { src: /storage/emulated/0/scripts/termux/start.sh, dest: /data/data/com.termux/files/usr/etc/profile.d/start.sh }
    - { src: /storage/emulated/0/github/prod/welcome.sh, dest: /data/data/com.termux/files/usr/etc/profile.d/welcome.sh }
    - { src: /storage/emulated/0/scripts/termux/bash.bashrc, dest: /data/data/com.termux/files/usr/etc/bash.bashrc }

- name: Create a symbolic link for 'a71.pro'
  tags: a71
  ansible.builtin.file:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    state: link
  loop:
    - { src: /storage/emulated/0/scripts/termux/aliases_list.sh, dest: /data/data/com.termux/files/usr/etc/profile.d/aliases_list.sh }
  when: hostname == "a71.pro"

- name: Touch a file 'crontab'
  tags:
  - cron
  - crontab
  ansible.builtin.file:
    path: "/data/data/com.termux/files/usr/var/spool/cron/crontabs/{{ ansible_user_id }}"
    state: touch
    mode: u=rw,g=r,o=r

- name: Crontab turn on
  tags:
  - cron
  - crontab
  ansible.builtin.shell: busybox crontab /storage/emulated/0/scripts/termux/crontab
